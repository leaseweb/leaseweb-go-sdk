/*
Ordering

This document outlines the ordering API. The API is only available for customers with invoice payment method.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ordering

import (
	"encoding/json"
)

// checks if the DedicatedServerDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DedicatedServerDetail{}

// DedicatedServerDetail struct for DedicatedServerDetail
type DedicatedServerDetail struct {
	// Id of the server
	Id *string `json:"id,omitempty"`
	// Name of the server
	Name *string `json:"name,omitempty"`
	// Chassis of the server
	Chassis *string `json:"chassis,omitempty"`
	Cpu *Cpu `json:"cpu,omitempty"`
	// Time to get the server ready
	DeliveryMethod *string `json:"deliveryMethod,omitempty"`
	// HDD info of the server
	Hdd []Hdd `json:"hdd,omitempty"`
	Ram *Ram `json:"ram,omitempty"`
	// Location of the server
	Location []string `json:"location,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DedicatedServerDetail DedicatedServerDetail

// NewDedicatedServerDetail instantiates a new DedicatedServerDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDedicatedServerDetail() *DedicatedServerDetail {
	this := DedicatedServerDetail{}
	return &this
}

// NewDedicatedServerDetailWithDefaults instantiates a new DedicatedServerDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDedicatedServerDetailWithDefaults() *DedicatedServerDetail {
	this := DedicatedServerDetail{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DedicatedServerDetail) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DedicatedServerDetail) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DedicatedServerDetail) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DedicatedServerDetail) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DedicatedServerDetail) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DedicatedServerDetail) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DedicatedServerDetail) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DedicatedServerDetail) SetName(v string) {
	o.Name = &v
}

// GetChassis returns the Chassis field value if set, zero value otherwise.
func (o *DedicatedServerDetail) GetChassis() string {
	if o == nil || IsNil(o.Chassis) {
		var ret string
		return ret
	}
	return *o.Chassis
}

// GetChassisOk returns a tuple with the Chassis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DedicatedServerDetail) GetChassisOk() (*string, bool) {
	if o == nil || IsNil(o.Chassis) {
		return nil, false
	}
	return o.Chassis, true
}

// HasChassis returns a boolean if a field has been set.
func (o *DedicatedServerDetail) HasChassis() bool {
	if o != nil && !IsNil(o.Chassis) {
		return true
	}

	return false
}

// SetChassis gets a reference to the given string and assigns it to the Chassis field.
func (o *DedicatedServerDetail) SetChassis(v string) {
	o.Chassis = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *DedicatedServerDetail) GetCpu() Cpu {
	if o == nil || IsNil(o.Cpu) {
		var ret Cpu
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DedicatedServerDetail) GetCpuOk() (*Cpu, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *DedicatedServerDetail) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given Cpu and assigns it to the Cpu field.
func (o *DedicatedServerDetail) SetCpu(v Cpu) {
	o.Cpu = &v
}

// GetDeliveryMethod returns the DeliveryMethod field value if set, zero value otherwise.
func (o *DedicatedServerDetail) GetDeliveryMethod() string {
	if o == nil || IsNil(o.DeliveryMethod) {
		var ret string
		return ret
	}
	return *o.DeliveryMethod
}

// GetDeliveryMethodOk returns a tuple with the DeliveryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DedicatedServerDetail) GetDeliveryMethodOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryMethod) {
		return nil, false
	}
	return o.DeliveryMethod, true
}

// HasDeliveryMethod returns a boolean if a field has been set.
func (o *DedicatedServerDetail) HasDeliveryMethod() bool {
	if o != nil && !IsNil(o.DeliveryMethod) {
		return true
	}

	return false
}

// SetDeliveryMethod gets a reference to the given string and assigns it to the DeliveryMethod field.
func (o *DedicatedServerDetail) SetDeliveryMethod(v string) {
	o.DeliveryMethod = &v
}

// GetHdd returns the Hdd field value if set, zero value otherwise.
func (o *DedicatedServerDetail) GetHdd() []Hdd {
	if o == nil || IsNil(o.Hdd) {
		var ret []Hdd
		return ret
	}
	return o.Hdd
}

// GetHddOk returns a tuple with the Hdd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DedicatedServerDetail) GetHddOk() ([]Hdd, bool) {
	if o == nil || IsNil(o.Hdd) {
		return nil, false
	}
	return o.Hdd, true
}

// HasHdd returns a boolean if a field has been set.
func (o *DedicatedServerDetail) HasHdd() bool {
	if o != nil && !IsNil(o.Hdd) {
		return true
	}

	return false
}

// SetHdd gets a reference to the given []Hdd and assigns it to the Hdd field.
func (o *DedicatedServerDetail) SetHdd(v []Hdd) {
	o.Hdd = v
}

// GetRam returns the Ram field value if set, zero value otherwise.
func (o *DedicatedServerDetail) GetRam() Ram {
	if o == nil || IsNil(o.Ram) {
		var ret Ram
		return ret
	}
	return *o.Ram
}

// GetRamOk returns a tuple with the Ram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DedicatedServerDetail) GetRamOk() (*Ram, bool) {
	if o == nil || IsNil(o.Ram) {
		return nil, false
	}
	return o.Ram, true
}

// HasRam returns a boolean if a field has been set.
func (o *DedicatedServerDetail) HasRam() bool {
	if o != nil && !IsNil(o.Ram) {
		return true
	}

	return false
}

// SetRam gets a reference to the given Ram and assigns it to the Ram field.
func (o *DedicatedServerDetail) SetRam(v Ram) {
	o.Ram = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *DedicatedServerDetail) GetLocation() []string {
	if o == nil || IsNil(o.Location) {
		var ret []string
		return ret
	}
	return o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DedicatedServerDetail) GetLocationOk() ([]string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *DedicatedServerDetail) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given []string and assigns it to the Location field.
func (o *DedicatedServerDetail) SetLocation(v []string) {
	o.Location = v
}

func (o DedicatedServerDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DedicatedServerDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Chassis) {
		toSerialize["chassis"] = o.Chassis
	}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.DeliveryMethod) {
		toSerialize["deliveryMethod"] = o.DeliveryMethod
	}
	if !IsNil(o.Hdd) {
		toSerialize["hdd"] = o.Hdd
	}
	if !IsNil(o.Ram) {
		toSerialize["ram"] = o.Ram
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DedicatedServerDetail) UnmarshalJSON(data []byte) (err error) {
	varDedicatedServerDetail := _DedicatedServerDetail{}

	err = json.Unmarshal(data, &varDedicatedServerDetail)

	if err != nil {
		return err
	}

	*o = DedicatedServerDetail(varDedicatedServerDetail)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "chassis")
		delete(additionalProperties, "cpu")
		delete(additionalProperties, "deliveryMethod")
		delete(additionalProperties, "hdd")
		delete(additionalProperties, "ram")
		delete(additionalProperties, "location")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDedicatedServerDetail struct {
	value *DedicatedServerDetail
	isSet bool
}

func (v NullableDedicatedServerDetail) Get() *DedicatedServerDetail {
	return v.value
}

func (v *NullableDedicatedServerDetail) Set(val *DedicatedServerDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableDedicatedServerDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableDedicatedServerDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDedicatedServerDetail(val *DedicatedServerDetail) *NullableDedicatedServerDetail {
	return &NullableDedicatedServerDetail{value: val, isSet: true}
}

func (v NullableDedicatedServerDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDedicatedServerDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


