/*
Ordering

This document outlines the ordering API. The API is only available for customers with invoice payment method.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ordering

import (
	"encoding/json"
)

// checks if the DedicatedServerOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DedicatedServerOrder{}

// DedicatedServerOrder struct for DedicatedServerOrder
type DedicatedServerOrder struct {
	// Order Id
	OrderId *int32 `json:"orderId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DedicatedServerOrder DedicatedServerOrder

// NewDedicatedServerOrder instantiates a new DedicatedServerOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDedicatedServerOrder() *DedicatedServerOrder {
	this := DedicatedServerOrder{}
	return &this
}

// NewDedicatedServerOrderWithDefaults instantiates a new DedicatedServerOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDedicatedServerOrderWithDefaults() *DedicatedServerOrder {
	this := DedicatedServerOrder{}
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *DedicatedServerOrder) GetOrderId() int32 {
	if o == nil || IsNil(o.OrderId) {
		var ret int32
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DedicatedServerOrder) GetOrderIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *DedicatedServerOrder) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int32 and assigns it to the OrderId field.
func (o *DedicatedServerOrder) SetOrderId(v int32) {
	o.OrderId = &v
}

func (o DedicatedServerOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DedicatedServerOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DedicatedServerOrder) UnmarshalJSON(data []byte) (err error) {
	varDedicatedServerOrder := _DedicatedServerOrder{}

	err = json.Unmarshal(data, &varDedicatedServerOrder)

	if err != nil {
		return err
	}

	*o = DedicatedServerOrder(varDedicatedServerOrder)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "orderId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDedicatedServerOrder struct {
	value *DedicatedServerOrder
	isSet bool
}

func (v NullableDedicatedServerOrder) Get() *DedicatedServerOrder {
	return v.value
}

func (v *NullableDedicatedServerOrder) Set(val *DedicatedServerOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableDedicatedServerOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableDedicatedServerOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDedicatedServerOrder(val *DedicatedServerOrder) *NullableDedicatedServerOrder {
	return &NullableDedicatedServerOrder{value: val, isSet: true}
}

func (v NullableDedicatedServerOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDedicatedServerOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


