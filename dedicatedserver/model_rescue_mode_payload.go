/*
Dedicated Servers

This is the description of the Dedicated Server API.  The base url of this API is `https://api.leaseweb.com`.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicatedserver

import (
	"encoding/json"
)

// checks if the RescueModePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RescueModePayload{}

// RescueModePayload struct for RescueModePayload
type RescueModePayload struct {
	// Whether the server should be powered off and on automatically before the job is started
	PowerCycle *bool `json:"powerCycle,omitempty"`
	Network *DefaultPayloadNetwork `json:"network,omitempty"`
	// Location of the server
	Site *string `json:"site,omitempty"`
	// Who initiated the job
	InitiatedBy *string `json:"initiatedBy,omitempty"`
	// The brand of the server
	ServerBrand *string `json:"serverBrand,omitempty"`
	// The chassis of the server
	ServerChassis *string `json:"serverChassis,omitempty"`
	// The base URL of the fileserver
	FileserverBaseUrl *string `json:"fileserverBaseUrl,omitempty"`
	// Whether the server has hardware RAID
	ServerHardwareRaid *bool `json:"serverHardwareRaid,omitempty"`
	// The ID of the rescue image if job is for rescue mode
	RescueImageId *string `json:"rescueImageId,omitempty"`
	// SSH keys to be added to the server
	SshKeys NullableString `json:"sshKeys,omitempty"`
	// The URL to be called when the job is finished
	CallbackUrl NullableString `json:"callbackUrl,omitempty"`
	// Whether to send email notifications
	DoEmailNotification NullableBool `json:"doEmailNotification,omitempty"`
	// Whether the job is configurable
	Configurable NullableBool `json:"configurable,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RescueModePayload RescueModePayload

// NewRescueModePayload instantiates a new RescueModePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRescueModePayload() *RescueModePayload {
	this := RescueModePayload{}
	return &this
}

// NewRescueModePayloadWithDefaults instantiates a new RescueModePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRescueModePayloadWithDefaults() *RescueModePayload {
	this := RescueModePayload{}
	return &this
}

// GetPowerCycle returns the PowerCycle field value if set, zero value otherwise.
func (o *RescueModePayload) GetPowerCycle() bool {
	if o == nil || IsNil(o.PowerCycle) {
		var ret bool
		return ret
	}
	return *o.PowerCycle
}

// GetPowerCycleOk returns a tuple with the PowerCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RescueModePayload) GetPowerCycleOk() (*bool, bool) {
	if o == nil || IsNil(o.PowerCycle) {
		return nil, false
	}
	return o.PowerCycle, true
}

// HasPowerCycle returns a boolean if a field has been set.
func (o *RescueModePayload) HasPowerCycle() bool {
	if o != nil && !IsNil(o.PowerCycle) {
		return true
	}

	return false
}

// SetPowerCycle gets a reference to the given bool and assigns it to the PowerCycle field.
func (o *RescueModePayload) SetPowerCycle(v bool) {
	o.PowerCycle = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *RescueModePayload) GetNetwork() DefaultPayloadNetwork {
	if o == nil || IsNil(o.Network) {
		var ret DefaultPayloadNetwork
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RescueModePayload) GetNetworkOk() (*DefaultPayloadNetwork, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *RescueModePayload) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given DefaultPayloadNetwork and assigns it to the Network field.
func (o *RescueModePayload) SetNetwork(v DefaultPayloadNetwork) {
	o.Network = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *RescueModePayload) GetSite() string {
	if o == nil || IsNil(o.Site) {
		var ret string
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RescueModePayload) GetSiteOk() (*string, bool) {
	if o == nil || IsNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *RescueModePayload) HasSite() bool {
	if o != nil && !IsNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given string and assigns it to the Site field.
func (o *RescueModePayload) SetSite(v string) {
	o.Site = &v
}

// GetInitiatedBy returns the InitiatedBy field value if set, zero value otherwise.
func (o *RescueModePayload) GetInitiatedBy() string {
	if o == nil || IsNil(o.InitiatedBy) {
		var ret string
		return ret
	}
	return *o.InitiatedBy
}

// GetInitiatedByOk returns a tuple with the InitiatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RescueModePayload) GetInitiatedByOk() (*string, bool) {
	if o == nil || IsNil(o.InitiatedBy) {
		return nil, false
	}
	return o.InitiatedBy, true
}

// HasInitiatedBy returns a boolean if a field has been set.
func (o *RescueModePayload) HasInitiatedBy() bool {
	if o != nil && !IsNil(o.InitiatedBy) {
		return true
	}

	return false
}

// SetInitiatedBy gets a reference to the given string and assigns it to the InitiatedBy field.
func (o *RescueModePayload) SetInitiatedBy(v string) {
	o.InitiatedBy = &v
}

// GetServerBrand returns the ServerBrand field value if set, zero value otherwise.
func (o *RescueModePayload) GetServerBrand() string {
	if o == nil || IsNil(o.ServerBrand) {
		var ret string
		return ret
	}
	return *o.ServerBrand
}

// GetServerBrandOk returns a tuple with the ServerBrand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RescueModePayload) GetServerBrandOk() (*string, bool) {
	if o == nil || IsNil(o.ServerBrand) {
		return nil, false
	}
	return o.ServerBrand, true
}

// HasServerBrand returns a boolean if a field has been set.
func (o *RescueModePayload) HasServerBrand() bool {
	if o != nil && !IsNil(o.ServerBrand) {
		return true
	}

	return false
}

// SetServerBrand gets a reference to the given string and assigns it to the ServerBrand field.
func (o *RescueModePayload) SetServerBrand(v string) {
	o.ServerBrand = &v
}

// GetServerChassis returns the ServerChassis field value if set, zero value otherwise.
func (o *RescueModePayload) GetServerChassis() string {
	if o == nil || IsNil(o.ServerChassis) {
		var ret string
		return ret
	}
	return *o.ServerChassis
}

// GetServerChassisOk returns a tuple with the ServerChassis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RescueModePayload) GetServerChassisOk() (*string, bool) {
	if o == nil || IsNil(o.ServerChassis) {
		return nil, false
	}
	return o.ServerChassis, true
}

// HasServerChassis returns a boolean if a field has been set.
func (o *RescueModePayload) HasServerChassis() bool {
	if o != nil && !IsNil(o.ServerChassis) {
		return true
	}

	return false
}

// SetServerChassis gets a reference to the given string and assigns it to the ServerChassis field.
func (o *RescueModePayload) SetServerChassis(v string) {
	o.ServerChassis = &v
}

// GetFileserverBaseUrl returns the FileserverBaseUrl field value if set, zero value otherwise.
func (o *RescueModePayload) GetFileserverBaseUrl() string {
	if o == nil || IsNil(o.FileserverBaseUrl) {
		var ret string
		return ret
	}
	return *o.FileserverBaseUrl
}

// GetFileserverBaseUrlOk returns a tuple with the FileserverBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RescueModePayload) GetFileserverBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FileserverBaseUrl) {
		return nil, false
	}
	return o.FileserverBaseUrl, true
}

// HasFileserverBaseUrl returns a boolean if a field has been set.
func (o *RescueModePayload) HasFileserverBaseUrl() bool {
	if o != nil && !IsNil(o.FileserverBaseUrl) {
		return true
	}

	return false
}

// SetFileserverBaseUrl gets a reference to the given string and assigns it to the FileserverBaseUrl field.
func (o *RescueModePayload) SetFileserverBaseUrl(v string) {
	o.FileserverBaseUrl = &v
}

// GetServerHardwareRaid returns the ServerHardwareRaid field value if set, zero value otherwise.
func (o *RescueModePayload) GetServerHardwareRaid() bool {
	if o == nil || IsNil(o.ServerHardwareRaid) {
		var ret bool
		return ret
	}
	return *o.ServerHardwareRaid
}

// GetServerHardwareRaidOk returns a tuple with the ServerHardwareRaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RescueModePayload) GetServerHardwareRaidOk() (*bool, bool) {
	if o == nil || IsNil(o.ServerHardwareRaid) {
		return nil, false
	}
	return o.ServerHardwareRaid, true
}

// HasServerHardwareRaid returns a boolean if a field has been set.
func (o *RescueModePayload) HasServerHardwareRaid() bool {
	if o != nil && !IsNil(o.ServerHardwareRaid) {
		return true
	}

	return false
}

// SetServerHardwareRaid gets a reference to the given bool and assigns it to the ServerHardwareRaid field.
func (o *RescueModePayload) SetServerHardwareRaid(v bool) {
	o.ServerHardwareRaid = &v
}

// GetRescueImageId returns the RescueImageId field value if set, zero value otherwise.
func (o *RescueModePayload) GetRescueImageId() string {
	if o == nil || IsNil(o.RescueImageId) {
		var ret string
		return ret
	}
	return *o.RescueImageId
}

// GetRescueImageIdOk returns a tuple with the RescueImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RescueModePayload) GetRescueImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.RescueImageId) {
		return nil, false
	}
	return o.RescueImageId, true
}

// HasRescueImageId returns a boolean if a field has been set.
func (o *RescueModePayload) HasRescueImageId() bool {
	if o != nil && !IsNil(o.RescueImageId) {
		return true
	}

	return false
}

// SetRescueImageId gets a reference to the given string and assigns it to the RescueImageId field.
func (o *RescueModePayload) SetRescueImageId(v string) {
	o.RescueImageId = &v
}

// GetSshKeys returns the SshKeys field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RescueModePayload) GetSshKeys() string {
	if o == nil || IsNil(o.SshKeys.Get()) {
		var ret string
		return ret
	}
	return *o.SshKeys.Get()
}

// GetSshKeysOk returns a tuple with the SshKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RescueModePayload) GetSshKeysOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SshKeys.Get(), o.SshKeys.IsSet()
}

// HasSshKeys returns a boolean if a field has been set.
func (o *RescueModePayload) HasSshKeys() bool {
	if o != nil && o.SshKeys.IsSet() {
		return true
	}

	return false
}

// SetSshKeys gets a reference to the given NullableString and assigns it to the SshKeys field.
func (o *RescueModePayload) SetSshKeys(v string) {
	o.SshKeys.Set(&v)
}
// SetSshKeysNil sets the value for SshKeys to be an explicit nil
func (o *RescueModePayload) SetSshKeysNil() {
	o.SshKeys.Set(nil)
}

// UnsetSshKeys ensures that no value is present for SshKeys, not even an explicit nil
func (o *RescueModePayload) UnsetSshKeys() {
	o.SshKeys.Unset()
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RescueModePayload) GetCallbackUrl() string {
	if o == nil || IsNil(o.CallbackUrl.Get()) {
		var ret string
		return ret
	}
	return *o.CallbackUrl.Get()
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RescueModePayload) GetCallbackUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CallbackUrl.Get(), o.CallbackUrl.IsSet()
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *RescueModePayload) HasCallbackUrl() bool {
	if o != nil && o.CallbackUrl.IsSet() {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given NullableString and assigns it to the CallbackUrl field.
func (o *RescueModePayload) SetCallbackUrl(v string) {
	o.CallbackUrl.Set(&v)
}
// SetCallbackUrlNil sets the value for CallbackUrl to be an explicit nil
func (o *RescueModePayload) SetCallbackUrlNil() {
	o.CallbackUrl.Set(nil)
}

// UnsetCallbackUrl ensures that no value is present for CallbackUrl, not even an explicit nil
func (o *RescueModePayload) UnsetCallbackUrl() {
	o.CallbackUrl.Unset()
}

// GetDoEmailNotification returns the DoEmailNotification field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RescueModePayload) GetDoEmailNotification() bool {
	if o == nil || IsNil(o.DoEmailNotification.Get()) {
		var ret bool
		return ret
	}
	return *o.DoEmailNotification.Get()
}

// GetDoEmailNotificationOk returns a tuple with the DoEmailNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RescueModePayload) GetDoEmailNotificationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DoEmailNotification.Get(), o.DoEmailNotification.IsSet()
}

// HasDoEmailNotification returns a boolean if a field has been set.
func (o *RescueModePayload) HasDoEmailNotification() bool {
	if o != nil && o.DoEmailNotification.IsSet() {
		return true
	}

	return false
}

// SetDoEmailNotification gets a reference to the given NullableBool and assigns it to the DoEmailNotification field.
func (o *RescueModePayload) SetDoEmailNotification(v bool) {
	o.DoEmailNotification.Set(&v)
}
// SetDoEmailNotificationNil sets the value for DoEmailNotification to be an explicit nil
func (o *RescueModePayload) SetDoEmailNotificationNil() {
	o.DoEmailNotification.Set(nil)
}

// UnsetDoEmailNotification ensures that no value is present for DoEmailNotification, not even an explicit nil
func (o *RescueModePayload) UnsetDoEmailNotification() {
	o.DoEmailNotification.Unset()
}

// GetConfigurable returns the Configurable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RescueModePayload) GetConfigurable() bool {
	if o == nil || IsNil(o.Configurable.Get()) {
		var ret bool
		return ret
	}
	return *o.Configurable.Get()
}

// GetConfigurableOk returns a tuple with the Configurable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RescueModePayload) GetConfigurableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Configurable.Get(), o.Configurable.IsSet()
}

// HasConfigurable returns a boolean if a field has been set.
func (o *RescueModePayload) HasConfigurable() bool {
	if o != nil && o.Configurable.IsSet() {
		return true
	}

	return false
}

// SetConfigurable gets a reference to the given NullableBool and assigns it to the Configurable field.
func (o *RescueModePayload) SetConfigurable(v bool) {
	o.Configurable.Set(&v)
}
// SetConfigurableNil sets the value for Configurable to be an explicit nil
func (o *RescueModePayload) SetConfigurableNil() {
	o.Configurable.Set(nil)
}

// UnsetConfigurable ensures that no value is present for Configurable, not even an explicit nil
func (o *RescueModePayload) UnsetConfigurable() {
	o.Configurable.Unset()
}

func (o RescueModePayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RescueModePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PowerCycle) {
		toSerialize["powerCycle"] = o.PowerCycle
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	if !IsNil(o.InitiatedBy) {
		toSerialize["initiatedBy"] = o.InitiatedBy
	}
	if !IsNil(o.ServerBrand) {
		toSerialize["serverBrand"] = o.ServerBrand
	}
	if !IsNil(o.ServerChassis) {
		toSerialize["serverChassis"] = o.ServerChassis
	}
	if !IsNil(o.FileserverBaseUrl) {
		toSerialize["fileserverBaseUrl"] = o.FileserverBaseUrl
	}
	if !IsNil(o.ServerHardwareRaid) {
		toSerialize["serverHardwareRaid"] = o.ServerHardwareRaid
	}
	if !IsNil(o.RescueImageId) {
		toSerialize["rescueImageId"] = o.RescueImageId
	}
	if o.SshKeys.IsSet() {
		toSerialize["sshKeys"] = o.SshKeys.Get()
	}
	if o.CallbackUrl.IsSet() {
		toSerialize["callbackUrl"] = o.CallbackUrl.Get()
	}
	if o.DoEmailNotification.IsSet() {
		toSerialize["doEmailNotification"] = o.DoEmailNotification.Get()
	}
	if o.Configurable.IsSet() {
		toSerialize["configurable"] = o.Configurable.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RescueModePayload) UnmarshalJSON(data []byte) (err error) {
	varRescueModePayload := _RescueModePayload{}

	err = json.Unmarshal(data, &varRescueModePayload)

	if err != nil {
		return err
	}

	*o = RescueModePayload(varRescueModePayload)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "powerCycle")
		delete(additionalProperties, "network")
		delete(additionalProperties, "site")
		delete(additionalProperties, "initiatedBy")
		delete(additionalProperties, "serverBrand")
		delete(additionalProperties, "serverChassis")
		delete(additionalProperties, "fileserverBaseUrl")
		delete(additionalProperties, "serverHardwareRaid")
		delete(additionalProperties, "rescueImageId")
		delete(additionalProperties, "sshKeys")
		delete(additionalProperties, "callbackUrl")
		delete(additionalProperties, "doEmailNotification")
		delete(additionalProperties, "configurable")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRescueModePayload struct {
	value *RescueModePayload
	isSet bool
}

func (v NullableRescueModePayload) Get() *RescueModePayload {
	return v.value
}

func (v *NullableRescueModePayload) Set(val *RescueModePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableRescueModePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableRescueModePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRescueModePayload(val *RescueModePayload) *NullableRescueModePayload {
	return &NullableRescueModePayload{value: val, isSet: true}
}

func (v NullableRescueModePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRescueModePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


