/*
Dedicated Servers

This is the description of the Dedicated Server API.  The base url of this API is `https://api.leaseweb.com`.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicatedserver

import (
	"encoding/json"
)

// checks if the Metadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Metadata{}

// Metadata Metadata of the job
type Metadata struct {
	// The batch ID of the job
	BATCH_ID NullableString `json:"BATCH_ID,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Metadata Metadata

// NewMetadata instantiates a new Metadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadata() *Metadata {
	this := Metadata{}
	return &this
}

// NewMetadataWithDefaults instantiates a new Metadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataWithDefaults() *Metadata {
	this := Metadata{}
	return &this
}

// GetBATCH_ID returns the BATCH_ID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Metadata) GetBATCH_ID() string {
	if o == nil || IsNil(o.BATCH_ID.Get()) {
		var ret string
		return ret
	}
	return *o.BATCH_ID.Get()
}

// GetBATCH_IDOk returns a tuple with the BATCH_ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Metadata) GetBATCH_IDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BATCH_ID.Get(), o.BATCH_ID.IsSet()
}

// HasBATCH_ID returns a boolean if a field has been set.
func (o *Metadata) HasBATCH_ID() bool {
	if o != nil && o.BATCH_ID.IsSet() {
		return true
	}

	return false
}

// SetBATCH_ID gets a reference to the given NullableString and assigns it to the BATCH_ID field.
func (o *Metadata) SetBATCH_ID(v string) {
	o.BATCH_ID.Set(&v)
}
// SetBATCH_IDNil sets the value for BATCH_ID to be an explicit nil
func (o *Metadata) SetBATCH_IDNil() {
	o.BATCH_ID.Set(nil)
}

// UnsetBATCH_ID ensures that no value is present for BATCH_ID, not even an explicit nil
func (o *Metadata) UnsetBATCH_ID() {
	o.BATCH_ID.Unset()
}

func (o Metadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Metadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BATCH_ID.IsSet() {
		toSerialize["BATCH_ID"] = o.BATCH_ID.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Metadata) UnmarshalJSON(data []byte) (err error) {
	varMetadata := _Metadata{}

	err = json.Unmarshal(data, &varMetadata)

	if err != nil {
		return err
	}

	*o = Metadata(varMetadata)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "BATCH_ID")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetadata struct {
	value *Metadata
	isSet bool
}

func (v NullableMetadata) Get() *Metadata {
	return v.value
}

func (v *NullableMetadata) Set(val *Metadata) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadata(val *Metadata) *NullableMetadata {
	return &NullableMetadata{value: val, isSet: true}
}

func (v NullableMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


