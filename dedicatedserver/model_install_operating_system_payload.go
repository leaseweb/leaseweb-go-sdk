/*
Dedicated Servers

This is the description of the Dedicated Server API.  The base url of this API is `https://api.leaseweb.com`.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicatedserver

import (
	"encoding/json"
)

// checks if the InstallOperatingSystemPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstallOperatingSystemPayload{}

// InstallOperatingSystemPayload struct for InstallOperatingSystemPayload
type InstallOperatingSystemPayload struct {
	// Whether the server should be powered off and on automatically before the job is started
	PowerCycle *bool `json:"powerCycle,omitempty"`
	Network *DefaultPayloadNetwork `json:"network,omitempty"`
	// Location of the server
	Site *string `json:"site,omitempty"`
	// Who initiated the job
	InitiatedBy *string `json:"initiatedBy,omitempty"`
	// The brand of the server
	ServerBrand *string `json:"serverBrand,omitempty"`
	// The chassis of the server
	ServerChassis *string `json:"serverChassis,omitempty"`
	// The base URL of the fileserver
	FileserverBaseUrl *string `json:"fileserverBaseUrl,omitempty"`
	// Whether the server has hardware RAID
	ServerHardwareRaid *bool `json:"serverHardwareRaid,omitempty"`
	Os *Os `json:"os,omitempty"`
	Raid NullableRaidPayload `json:"raid,omitempty"`
	// The installation device
	Device *string `json:"device,omitempty"`
	// The hostname of the server
	Hostname *string `json:"hostname,omitempty"`
	// Timezone to be configured on the server
	Timezone *string `json:"timezone,omitempty"`
	Partitions []Partition `json:"partitions,omitempty"`
	// The ID of the operating system
	OperatingSystemId *string `json:"operatingSystemId,omitempty"`
	// The server's features
	Features []string `json:"features,omitempty"`
	// The features that are being utilized by the server
	FeaturesUtilized []string `json:"featuresUtilized,omitempty"`
	// SSH keys to be added to the server
	SshKeys NullableString `json:"sshKeys,omitempty"`
	Database NullableDatabase `json:"database,omitempty"`
	// The AI frameworks that are being installed on the server
	AiFrameworks []string `json:"aiFrameworks,omitempty"`
	// The URL to be called when the job is finished
	CallbackUrl NullableString `json:"callbackUrl,omitempty"`
	// Whether to send email notifications
	DoEmailNotification NullableBool `json:"doEmailNotification,omitempty"`
	// Whether the job is configurable
	Configurable NullableBool `json:"configurable,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InstallOperatingSystemPayload InstallOperatingSystemPayload

// NewInstallOperatingSystemPayload instantiates a new InstallOperatingSystemPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstallOperatingSystemPayload() *InstallOperatingSystemPayload {
	this := InstallOperatingSystemPayload{}
	return &this
}

// NewInstallOperatingSystemPayloadWithDefaults instantiates a new InstallOperatingSystemPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstallOperatingSystemPayloadWithDefaults() *InstallOperatingSystemPayload {
	this := InstallOperatingSystemPayload{}
	return &this
}

// GetPowerCycle returns the PowerCycle field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetPowerCycle() bool {
	if o == nil || IsNil(o.PowerCycle) {
		var ret bool
		return ret
	}
	return *o.PowerCycle
}

// GetPowerCycleOk returns a tuple with the PowerCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetPowerCycleOk() (*bool, bool) {
	if o == nil || IsNil(o.PowerCycle) {
		return nil, false
	}
	return o.PowerCycle, true
}

// HasPowerCycle returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasPowerCycle() bool {
	if o != nil && !IsNil(o.PowerCycle) {
		return true
	}

	return false
}

// SetPowerCycle gets a reference to the given bool and assigns it to the PowerCycle field.
func (o *InstallOperatingSystemPayload) SetPowerCycle(v bool) {
	o.PowerCycle = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetNetwork() DefaultPayloadNetwork {
	if o == nil || IsNil(o.Network) {
		var ret DefaultPayloadNetwork
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetNetworkOk() (*DefaultPayloadNetwork, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given DefaultPayloadNetwork and assigns it to the Network field.
func (o *InstallOperatingSystemPayload) SetNetwork(v DefaultPayloadNetwork) {
	o.Network = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetSite() string {
	if o == nil || IsNil(o.Site) {
		var ret string
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetSiteOk() (*string, bool) {
	if o == nil || IsNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasSite() bool {
	if o != nil && !IsNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given string and assigns it to the Site field.
func (o *InstallOperatingSystemPayload) SetSite(v string) {
	o.Site = &v
}

// GetInitiatedBy returns the InitiatedBy field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetInitiatedBy() string {
	if o == nil || IsNil(o.InitiatedBy) {
		var ret string
		return ret
	}
	return *o.InitiatedBy
}

// GetInitiatedByOk returns a tuple with the InitiatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetInitiatedByOk() (*string, bool) {
	if o == nil || IsNil(o.InitiatedBy) {
		return nil, false
	}
	return o.InitiatedBy, true
}

// HasInitiatedBy returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasInitiatedBy() bool {
	if o != nil && !IsNil(o.InitiatedBy) {
		return true
	}

	return false
}

// SetInitiatedBy gets a reference to the given string and assigns it to the InitiatedBy field.
func (o *InstallOperatingSystemPayload) SetInitiatedBy(v string) {
	o.InitiatedBy = &v
}

// GetServerBrand returns the ServerBrand field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetServerBrand() string {
	if o == nil || IsNil(o.ServerBrand) {
		var ret string
		return ret
	}
	return *o.ServerBrand
}

// GetServerBrandOk returns a tuple with the ServerBrand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetServerBrandOk() (*string, bool) {
	if o == nil || IsNil(o.ServerBrand) {
		return nil, false
	}
	return o.ServerBrand, true
}

// HasServerBrand returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasServerBrand() bool {
	if o != nil && !IsNil(o.ServerBrand) {
		return true
	}

	return false
}

// SetServerBrand gets a reference to the given string and assigns it to the ServerBrand field.
func (o *InstallOperatingSystemPayload) SetServerBrand(v string) {
	o.ServerBrand = &v
}

// GetServerChassis returns the ServerChassis field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetServerChassis() string {
	if o == nil || IsNil(o.ServerChassis) {
		var ret string
		return ret
	}
	return *o.ServerChassis
}

// GetServerChassisOk returns a tuple with the ServerChassis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetServerChassisOk() (*string, bool) {
	if o == nil || IsNil(o.ServerChassis) {
		return nil, false
	}
	return o.ServerChassis, true
}

// HasServerChassis returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasServerChassis() bool {
	if o != nil && !IsNil(o.ServerChassis) {
		return true
	}

	return false
}

// SetServerChassis gets a reference to the given string and assigns it to the ServerChassis field.
func (o *InstallOperatingSystemPayload) SetServerChassis(v string) {
	o.ServerChassis = &v
}

// GetFileserverBaseUrl returns the FileserverBaseUrl field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetFileserverBaseUrl() string {
	if o == nil || IsNil(o.FileserverBaseUrl) {
		var ret string
		return ret
	}
	return *o.FileserverBaseUrl
}

// GetFileserverBaseUrlOk returns a tuple with the FileserverBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetFileserverBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FileserverBaseUrl) {
		return nil, false
	}
	return o.FileserverBaseUrl, true
}

// HasFileserverBaseUrl returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasFileserverBaseUrl() bool {
	if o != nil && !IsNil(o.FileserverBaseUrl) {
		return true
	}

	return false
}

// SetFileserverBaseUrl gets a reference to the given string and assigns it to the FileserverBaseUrl field.
func (o *InstallOperatingSystemPayload) SetFileserverBaseUrl(v string) {
	o.FileserverBaseUrl = &v
}

// GetServerHardwareRaid returns the ServerHardwareRaid field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetServerHardwareRaid() bool {
	if o == nil || IsNil(o.ServerHardwareRaid) {
		var ret bool
		return ret
	}
	return *o.ServerHardwareRaid
}

// GetServerHardwareRaidOk returns a tuple with the ServerHardwareRaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetServerHardwareRaidOk() (*bool, bool) {
	if o == nil || IsNil(o.ServerHardwareRaid) {
		return nil, false
	}
	return o.ServerHardwareRaid, true
}

// HasServerHardwareRaid returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasServerHardwareRaid() bool {
	if o != nil && !IsNil(o.ServerHardwareRaid) {
		return true
	}

	return false
}

// SetServerHardwareRaid gets a reference to the given bool and assigns it to the ServerHardwareRaid field.
func (o *InstallOperatingSystemPayload) SetServerHardwareRaid(v bool) {
	o.ServerHardwareRaid = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetOs() Os {
	if o == nil || IsNil(o.Os) {
		var ret Os
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetOsOk() (*Os, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given Os and assigns it to the Os field.
func (o *InstallOperatingSystemPayload) SetOs(v Os) {
	o.Os = &v
}

// GetRaid returns the Raid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstallOperatingSystemPayload) GetRaid() RaidPayload {
	if o == nil || IsNil(o.Raid.Get()) {
		var ret RaidPayload
		return ret
	}
	return *o.Raid.Get()
}

// GetRaidOk returns a tuple with the Raid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstallOperatingSystemPayload) GetRaidOk() (*RaidPayload, bool) {
	if o == nil {
		return nil, false
	}
	return o.Raid.Get(), o.Raid.IsSet()
}

// HasRaid returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasRaid() bool {
	if o != nil && o.Raid.IsSet() {
		return true
	}

	return false
}

// SetRaid gets a reference to the given NullableRaidPayload and assigns it to the Raid field.
func (o *InstallOperatingSystemPayload) SetRaid(v RaidPayload) {
	o.Raid.Set(&v)
}
// SetRaidNil sets the value for Raid to be an explicit nil
func (o *InstallOperatingSystemPayload) SetRaidNil() {
	o.Raid.Set(nil)
}

// UnsetRaid ensures that no value is present for Raid, not even an explicit nil
func (o *InstallOperatingSystemPayload) UnsetRaid() {
	o.Raid.Unset()
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetDevice() string {
	if o == nil || IsNil(o.Device) {
		var ret string
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given string and assigns it to the Device field.
func (o *InstallOperatingSystemPayload) SetDevice(v string) {
	o.Device = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *InstallOperatingSystemPayload) SetHostname(v string) {
	o.Hostname = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *InstallOperatingSystemPayload) SetTimezone(v string) {
	o.Timezone = &v
}

// GetPartitions returns the Partitions field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetPartitions() []Partition {
	if o == nil || IsNil(o.Partitions) {
		var ret []Partition
		return ret
	}
	return o.Partitions
}

// GetPartitionsOk returns a tuple with the Partitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetPartitionsOk() ([]Partition, bool) {
	if o == nil || IsNil(o.Partitions) {
		return nil, false
	}
	return o.Partitions, true
}

// HasPartitions returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasPartitions() bool {
	if o != nil && !IsNil(o.Partitions) {
		return true
	}

	return false
}

// SetPartitions gets a reference to the given []Partition and assigns it to the Partitions field.
func (o *InstallOperatingSystemPayload) SetPartitions(v []Partition) {
	o.Partitions = v
}

// GetOperatingSystemId returns the OperatingSystemId field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetOperatingSystemId() string {
	if o == nil || IsNil(o.OperatingSystemId) {
		var ret string
		return ret
	}
	return *o.OperatingSystemId
}

// GetOperatingSystemIdOk returns a tuple with the OperatingSystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetOperatingSystemIdOk() (*string, bool) {
	if o == nil || IsNil(o.OperatingSystemId) {
		return nil, false
	}
	return o.OperatingSystemId, true
}

// HasOperatingSystemId returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasOperatingSystemId() bool {
	if o != nil && !IsNil(o.OperatingSystemId) {
		return true
	}

	return false
}

// SetOperatingSystemId gets a reference to the given string and assigns it to the OperatingSystemId field.
func (o *InstallOperatingSystemPayload) SetOperatingSystemId(v string) {
	o.OperatingSystemId = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetFeatures() []string {
	if o == nil || IsNil(o.Features) {
		var ret []string
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetFeaturesOk() ([]string, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []string and assigns it to the Features field.
func (o *InstallOperatingSystemPayload) SetFeatures(v []string) {
	o.Features = v
}

// GetFeaturesUtilized returns the FeaturesUtilized field value if set, zero value otherwise.
func (o *InstallOperatingSystemPayload) GetFeaturesUtilized() []string {
	if o == nil || IsNil(o.FeaturesUtilized) {
		var ret []string
		return ret
	}
	return o.FeaturesUtilized
}

// GetFeaturesUtilizedOk returns a tuple with the FeaturesUtilized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallOperatingSystemPayload) GetFeaturesUtilizedOk() ([]string, bool) {
	if o == nil || IsNil(o.FeaturesUtilized) {
		return nil, false
	}
	return o.FeaturesUtilized, true
}

// HasFeaturesUtilized returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasFeaturesUtilized() bool {
	if o != nil && !IsNil(o.FeaturesUtilized) {
		return true
	}

	return false
}

// SetFeaturesUtilized gets a reference to the given []string and assigns it to the FeaturesUtilized field.
func (o *InstallOperatingSystemPayload) SetFeaturesUtilized(v []string) {
	o.FeaturesUtilized = v
}

// GetSshKeys returns the SshKeys field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstallOperatingSystemPayload) GetSshKeys() string {
	if o == nil || IsNil(o.SshKeys.Get()) {
		var ret string
		return ret
	}
	return *o.SshKeys.Get()
}

// GetSshKeysOk returns a tuple with the SshKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstallOperatingSystemPayload) GetSshKeysOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SshKeys.Get(), o.SshKeys.IsSet()
}

// HasSshKeys returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasSshKeys() bool {
	if o != nil && o.SshKeys.IsSet() {
		return true
	}

	return false
}

// SetSshKeys gets a reference to the given NullableString and assigns it to the SshKeys field.
func (o *InstallOperatingSystemPayload) SetSshKeys(v string) {
	o.SshKeys.Set(&v)
}
// SetSshKeysNil sets the value for SshKeys to be an explicit nil
func (o *InstallOperatingSystemPayload) SetSshKeysNil() {
	o.SshKeys.Set(nil)
}

// UnsetSshKeys ensures that no value is present for SshKeys, not even an explicit nil
func (o *InstallOperatingSystemPayload) UnsetSshKeys() {
	o.SshKeys.Unset()
}

// GetDatabase returns the Database field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstallOperatingSystemPayload) GetDatabase() Database {
	if o == nil || IsNil(o.Database.Get()) {
		var ret Database
		return ret
	}
	return *o.Database.Get()
}

// GetDatabaseOk returns a tuple with the Database field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstallOperatingSystemPayload) GetDatabaseOk() (*Database, bool) {
	if o == nil {
		return nil, false
	}
	return o.Database.Get(), o.Database.IsSet()
}

// HasDatabase returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasDatabase() bool {
	if o != nil && o.Database.IsSet() {
		return true
	}

	return false
}

// SetDatabase gets a reference to the given NullableDatabase and assigns it to the Database field.
func (o *InstallOperatingSystemPayload) SetDatabase(v Database) {
	o.Database.Set(&v)
}
// SetDatabaseNil sets the value for Database to be an explicit nil
func (o *InstallOperatingSystemPayload) SetDatabaseNil() {
	o.Database.Set(nil)
}

// UnsetDatabase ensures that no value is present for Database, not even an explicit nil
func (o *InstallOperatingSystemPayload) UnsetDatabase() {
	o.Database.Unset()
}

// GetAiFrameworks returns the AiFrameworks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstallOperatingSystemPayload) GetAiFrameworks() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AiFrameworks
}

// GetAiFrameworksOk returns a tuple with the AiFrameworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstallOperatingSystemPayload) GetAiFrameworksOk() ([]string, bool) {
	if o == nil || IsNil(o.AiFrameworks) {
		return nil, false
	}
	return o.AiFrameworks, true
}

// HasAiFrameworks returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasAiFrameworks() bool {
	if o != nil && !IsNil(o.AiFrameworks) {
		return true
	}

	return false
}

// SetAiFrameworks gets a reference to the given []string and assigns it to the AiFrameworks field.
func (o *InstallOperatingSystemPayload) SetAiFrameworks(v []string) {
	o.AiFrameworks = v
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstallOperatingSystemPayload) GetCallbackUrl() string {
	if o == nil || IsNil(o.CallbackUrl.Get()) {
		var ret string
		return ret
	}
	return *o.CallbackUrl.Get()
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstallOperatingSystemPayload) GetCallbackUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CallbackUrl.Get(), o.CallbackUrl.IsSet()
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasCallbackUrl() bool {
	if o != nil && o.CallbackUrl.IsSet() {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given NullableString and assigns it to the CallbackUrl field.
func (o *InstallOperatingSystemPayload) SetCallbackUrl(v string) {
	o.CallbackUrl.Set(&v)
}
// SetCallbackUrlNil sets the value for CallbackUrl to be an explicit nil
func (o *InstallOperatingSystemPayload) SetCallbackUrlNil() {
	o.CallbackUrl.Set(nil)
}

// UnsetCallbackUrl ensures that no value is present for CallbackUrl, not even an explicit nil
func (o *InstallOperatingSystemPayload) UnsetCallbackUrl() {
	o.CallbackUrl.Unset()
}

// GetDoEmailNotification returns the DoEmailNotification field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstallOperatingSystemPayload) GetDoEmailNotification() bool {
	if o == nil || IsNil(o.DoEmailNotification.Get()) {
		var ret bool
		return ret
	}
	return *o.DoEmailNotification.Get()
}

// GetDoEmailNotificationOk returns a tuple with the DoEmailNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstallOperatingSystemPayload) GetDoEmailNotificationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DoEmailNotification.Get(), o.DoEmailNotification.IsSet()
}

// HasDoEmailNotification returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasDoEmailNotification() bool {
	if o != nil && o.DoEmailNotification.IsSet() {
		return true
	}

	return false
}

// SetDoEmailNotification gets a reference to the given NullableBool and assigns it to the DoEmailNotification field.
func (o *InstallOperatingSystemPayload) SetDoEmailNotification(v bool) {
	o.DoEmailNotification.Set(&v)
}
// SetDoEmailNotificationNil sets the value for DoEmailNotification to be an explicit nil
func (o *InstallOperatingSystemPayload) SetDoEmailNotificationNil() {
	o.DoEmailNotification.Set(nil)
}

// UnsetDoEmailNotification ensures that no value is present for DoEmailNotification, not even an explicit nil
func (o *InstallOperatingSystemPayload) UnsetDoEmailNotification() {
	o.DoEmailNotification.Unset()
}

// GetConfigurable returns the Configurable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstallOperatingSystemPayload) GetConfigurable() bool {
	if o == nil || IsNil(o.Configurable.Get()) {
		var ret bool
		return ret
	}
	return *o.Configurable.Get()
}

// GetConfigurableOk returns a tuple with the Configurable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstallOperatingSystemPayload) GetConfigurableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Configurable.Get(), o.Configurable.IsSet()
}

// HasConfigurable returns a boolean if a field has been set.
func (o *InstallOperatingSystemPayload) HasConfigurable() bool {
	if o != nil && o.Configurable.IsSet() {
		return true
	}

	return false
}

// SetConfigurable gets a reference to the given NullableBool and assigns it to the Configurable field.
func (o *InstallOperatingSystemPayload) SetConfigurable(v bool) {
	o.Configurable.Set(&v)
}
// SetConfigurableNil sets the value for Configurable to be an explicit nil
func (o *InstallOperatingSystemPayload) SetConfigurableNil() {
	o.Configurable.Set(nil)
}

// UnsetConfigurable ensures that no value is present for Configurable, not even an explicit nil
func (o *InstallOperatingSystemPayload) UnsetConfigurable() {
	o.Configurable.Unset()
}

func (o InstallOperatingSystemPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstallOperatingSystemPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PowerCycle) {
		toSerialize["powerCycle"] = o.PowerCycle
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	if !IsNil(o.InitiatedBy) {
		toSerialize["initiatedBy"] = o.InitiatedBy
	}
	if !IsNil(o.ServerBrand) {
		toSerialize["serverBrand"] = o.ServerBrand
	}
	if !IsNil(o.ServerChassis) {
		toSerialize["serverChassis"] = o.ServerChassis
	}
	if !IsNil(o.FileserverBaseUrl) {
		toSerialize["fileserverBaseUrl"] = o.FileserverBaseUrl
	}
	if !IsNil(o.ServerHardwareRaid) {
		toSerialize["serverHardwareRaid"] = o.ServerHardwareRaid
	}
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if o.Raid.IsSet() {
		toSerialize["raid"] = o.Raid.Get()
	}
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !IsNil(o.Partitions) {
		toSerialize["partitions"] = o.Partitions
	}
	if !IsNil(o.OperatingSystemId) {
		toSerialize["operatingSystemId"] = o.OperatingSystemId
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.FeaturesUtilized) {
		toSerialize["featuresUtilized"] = o.FeaturesUtilized
	}
	if o.SshKeys.IsSet() {
		toSerialize["sshKeys"] = o.SshKeys.Get()
	}
	if o.Database.IsSet() {
		toSerialize["database"] = o.Database.Get()
	}
	if o.AiFrameworks != nil {
		toSerialize["aiFrameworks"] = o.AiFrameworks
	}
	if o.CallbackUrl.IsSet() {
		toSerialize["callbackUrl"] = o.CallbackUrl.Get()
	}
	if o.DoEmailNotification.IsSet() {
		toSerialize["doEmailNotification"] = o.DoEmailNotification.Get()
	}
	if o.Configurable.IsSet() {
		toSerialize["configurable"] = o.Configurable.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InstallOperatingSystemPayload) UnmarshalJSON(data []byte) (err error) {
	varInstallOperatingSystemPayload := _InstallOperatingSystemPayload{}

	err = json.Unmarshal(data, &varInstallOperatingSystemPayload)

	if err != nil {
		return err
	}

	*o = InstallOperatingSystemPayload(varInstallOperatingSystemPayload)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "powerCycle")
		delete(additionalProperties, "network")
		delete(additionalProperties, "site")
		delete(additionalProperties, "initiatedBy")
		delete(additionalProperties, "serverBrand")
		delete(additionalProperties, "serverChassis")
		delete(additionalProperties, "fileserverBaseUrl")
		delete(additionalProperties, "serverHardwareRaid")
		delete(additionalProperties, "os")
		delete(additionalProperties, "raid")
		delete(additionalProperties, "device")
		delete(additionalProperties, "hostname")
		delete(additionalProperties, "timezone")
		delete(additionalProperties, "partitions")
		delete(additionalProperties, "operatingSystemId")
		delete(additionalProperties, "features")
		delete(additionalProperties, "featuresUtilized")
		delete(additionalProperties, "sshKeys")
		delete(additionalProperties, "database")
		delete(additionalProperties, "aiFrameworks")
		delete(additionalProperties, "callbackUrl")
		delete(additionalProperties, "doEmailNotification")
		delete(additionalProperties, "configurable")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInstallOperatingSystemPayload struct {
	value *InstallOperatingSystemPayload
	isSet bool
}

func (v NullableInstallOperatingSystemPayload) Get() *InstallOperatingSystemPayload {
	return v.value
}

func (v *NullableInstallOperatingSystemPayload) Set(val *InstallOperatingSystemPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableInstallOperatingSystemPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableInstallOperatingSystemPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstallOperatingSystemPayload(val *InstallOperatingSystemPayload) *NullableInstallOperatingSystemPayload {
	return &NullableInstallOperatingSystemPayload{value: val, isSet: true}
}

func (v NullableInstallOperatingSystemPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstallOperatingSystemPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


