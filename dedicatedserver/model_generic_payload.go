/*
Dedicated Servers

This is the description of the Dedicated Server API.  The base url of this API is `https://api.leaseweb.com`.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicatedserver

import (
	"encoding/json"
)

// checks if the GenericPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenericPayload{}

// GenericPayload struct for GenericPayload
type GenericPayload struct {
	// Whether the server should be powered off and on automatically before the job is started
	PowerCycle *bool `json:"powerCycle,omitempty"`
	Network *DefaultPayloadNetwork `json:"network,omitempty"`
	// Location of the server
	Site *string `json:"site,omitempty"`
	// Who initiated the job
	InitiatedBy *string `json:"initiatedBy,omitempty"`
	// The brand of the server
	ServerBrand *string `json:"serverBrand,omitempty"`
	// The chassis of the server
	ServerChassis *string `json:"serverChassis,omitempty"`
	// The base URL of the fileserver
	FileserverBaseUrl *string `json:"fileserverBaseUrl,omitempty"`
	// Whether the server has hardware RAID
	ServerHardwareRaid *bool `json:"serverHardwareRaid,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GenericPayload GenericPayload

// NewGenericPayload instantiates a new GenericPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericPayload() *GenericPayload {
	this := GenericPayload{}
	return &this
}

// NewGenericPayloadWithDefaults instantiates a new GenericPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericPayloadWithDefaults() *GenericPayload {
	this := GenericPayload{}
	return &this
}

// GetPowerCycle returns the PowerCycle field value if set, zero value otherwise.
func (o *GenericPayload) GetPowerCycle() bool {
	if o == nil || IsNil(o.PowerCycle) {
		var ret bool
		return ret
	}
	return *o.PowerCycle
}

// GetPowerCycleOk returns a tuple with the PowerCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericPayload) GetPowerCycleOk() (*bool, bool) {
	if o == nil || IsNil(o.PowerCycle) {
		return nil, false
	}
	return o.PowerCycle, true
}

// HasPowerCycle returns a boolean if a field has been set.
func (o *GenericPayload) HasPowerCycle() bool {
	if o != nil && !IsNil(o.PowerCycle) {
		return true
	}

	return false
}

// SetPowerCycle gets a reference to the given bool and assigns it to the PowerCycle field.
func (o *GenericPayload) SetPowerCycle(v bool) {
	o.PowerCycle = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *GenericPayload) GetNetwork() DefaultPayloadNetwork {
	if o == nil || IsNil(o.Network) {
		var ret DefaultPayloadNetwork
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericPayload) GetNetworkOk() (*DefaultPayloadNetwork, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *GenericPayload) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given DefaultPayloadNetwork and assigns it to the Network field.
func (o *GenericPayload) SetNetwork(v DefaultPayloadNetwork) {
	o.Network = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *GenericPayload) GetSite() string {
	if o == nil || IsNil(o.Site) {
		var ret string
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericPayload) GetSiteOk() (*string, bool) {
	if o == nil || IsNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *GenericPayload) HasSite() bool {
	if o != nil && !IsNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given string and assigns it to the Site field.
func (o *GenericPayload) SetSite(v string) {
	o.Site = &v
}

// GetInitiatedBy returns the InitiatedBy field value if set, zero value otherwise.
func (o *GenericPayload) GetInitiatedBy() string {
	if o == nil || IsNil(o.InitiatedBy) {
		var ret string
		return ret
	}
	return *o.InitiatedBy
}

// GetInitiatedByOk returns a tuple with the InitiatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericPayload) GetInitiatedByOk() (*string, bool) {
	if o == nil || IsNil(o.InitiatedBy) {
		return nil, false
	}
	return o.InitiatedBy, true
}

// HasInitiatedBy returns a boolean if a field has been set.
func (o *GenericPayload) HasInitiatedBy() bool {
	if o != nil && !IsNil(o.InitiatedBy) {
		return true
	}

	return false
}

// SetInitiatedBy gets a reference to the given string and assigns it to the InitiatedBy field.
func (o *GenericPayload) SetInitiatedBy(v string) {
	o.InitiatedBy = &v
}

// GetServerBrand returns the ServerBrand field value if set, zero value otherwise.
func (o *GenericPayload) GetServerBrand() string {
	if o == nil || IsNil(o.ServerBrand) {
		var ret string
		return ret
	}
	return *o.ServerBrand
}

// GetServerBrandOk returns a tuple with the ServerBrand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericPayload) GetServerBrandOk() (*string, bool) {
	if o == nil || IsNil(o.ServerBrand) {
		return nil, false
	}
	return o.ServerBrand, true
}

// HasServerBrand returns a boolean if a field has been set.
func (o *GenericPayload) HasServerBrand() bool {
	if o != nil && !IsNil(o.ServerBrand) {
		return true
	}

	return false
}

// SetServerBrand gets a reference to the given string and assigns it to the ServerBrand field.
func (o *GenericPayload) SetServerBrand(v string) {
	o.ServerBrand = &v
}

// GetServerChassis returns the ServerChassis field value if set, zero value otherwise.
func (o *GenericPayload) GetServerChassis() string {
	if o == nil || IsNil(o.ServerChassis) {
		var ret string
		return ret
	}
	return *o.ServerChassis
}

// GetServerChassisOk returns a tuple with the ServerChassis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericPayload) GetServerChassisOk() (*string, bool) {
	if o == nil || IsNil(o.ServerChassis) {
		return nil, false
	}
	return o.ServerChassis, true
}

// HasServerChassis returns a boolean if a field has been set.
func (o *GenericPayload) HasServerChassis() bool {
	if o != nil && !IsNil(o.ServerChassis) {
		return true
	}

	return false
}

// SetServerChassis gets a reference to the given string and assigns it to the ServerChassis field.
func (o *GenericPayload) SetServerChassis(v string) {
	o.ServerChassis = &v
}

// GetFileserverBaseUrl returns the FileserverBaseUrl field value if set, zero value otherwise.
func (o *GenericPayload) GetFileserverBaseUrl() string {
	if o == nil || IsNil(o.FileserverBaseUrl) {
		var ret string
		return ret
	}
	return *o.FileserverBaseUrl
}

// GetFileserverBaseUrlOk returns a tuple with the FileserverBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericPayload) GetFileserverBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FileserverBaseUrl) {
		return nil, false
	}
	return o.FileserverBaseUrl, true
}

// HasFileserverBaseUrl returns a boolean if a field has been set.
func (o *GenericPayload) HasFileserverBaseUrl() bool {
	if o != nil && !IsNil(o.FileserverBaseUrl) {
		return true
	}

	return false
}

// SetFileserverBaseUrl gets a reference to the given string and assigns it to the FileserverBaseUrl field.
func (o *GenericPayload) SetFileserverBaseUrl(v string) {
	o.FileserverBaseUrl = &v
}

// GetServerHardwareRaid returns the ServerHardwareRaid field value if set, zero value otherwise.
func (o *GenericPayload) GetServerHardwareRaid() bool {
	if o == nil || IsNil(o.ServerHardwareRaid) {
		var ret bool
		return ret
	}
	return *o.ServerHardwareRaid
}

// GetServerHardwareRaidOk returns a tuple with the ServerHardwareRaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericPayload) GetServerHardwareRaidOk() (*bool, bool) {
	if o == nil || IsNil(o.ServerHardwareRaid) {
		return nil, false
	}
	return o.ServerHardwareRaid, true
}

// HasServerHardwareRaid returns a boolean if a field has been set.
func (o *GenericPayload) HasServerHardwareRaid() bool {
	if o != nil && !IsNil(o.ServerHardwareRaid) {
		return true
	}

	return false
}

// SetServerHardwareRaid gets a reference to the given bool and assigns it to the ServerHardwareRaid field.
func (o *GenericPayload) SetServerHardwareRaid(v bool) {
	o.ServerHardwareRaid = &v
}

func (o GenericPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenericPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PowerCycle) {
		toSerialize["powerCycle"] = o.PowerCycle
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	if !IsNil(o.InitiatedBy) {
		toSerialize["initiatedBy"] = o.InitiatedBy
	}
	if !IsNil(o.ServerBrand) {
		toSerialize["serverBrand"] = o.ServerBrand
	}
	if !IsNil(o.ServerChassis) {
		toSerialize["serverChassis"] = o.ServerChassis
	}
	if !IsNil(o.FileserverBaseUrl) {
		toSerialize["fileserverBaseUrl"] = o.FileserverBaseUrl
	}
	if !IsNil(o.ServerHardwareRaid) {
		toSerialize["serverHardwareRaid"] = o.ServerHardwareRaid
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GenericPayload) UnmarshalJSON(data []byte) (err error) {
	varGenericPayload := _GenericPayload{}

	err = json.Unmarshal(data, &varGenericPayload)

	if err != nil {
		return err
	}

	*o = GenericPayload(varGenericPayload)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "powerCycle")
		delete(additionalProperties, "network")
		delete(additionalProperties, "site")
		delete(additionalProperties, "initiatedBy")
		delete(additionalProperties, "serverBrand")
		delete(additionalProperties, "serverChassis")
		delete(additionalProperties, "fileserverBaseUrl")
		delete(additionalProperties, "serverHardwareRaid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGenericPayload struct {
	value *GenericPayload
	isSet bool
}

func (v NullableGenericPayload) Get() *GenericPayload {
	return v.value
}

func (v *NullableGenericPayload) Set(val *GenericPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericPayload(val *GenericPayload) *NullableGenericPayload {
	return &NullableGenericPayload{value: val, isSet: true}
}

func (v NullableGenericPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


