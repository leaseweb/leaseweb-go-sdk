/*
Public Clouds

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publiccloud

import (
	"encoding/json"
	"fmt"
)

// DataTrafficMetricsGranularity Define the time interval for data aggregation
type DataTrafficMetricsGranularity string

// List of dataTrafficMetricsGranularity
const (
	DATATRAFFICMETRICSGRANULARITY_DAY DataTrafficMetricsGranularity = "DAY"
)

// All allowed values of DataTrafficMetricsGranularity enum
var AllowedDataTrafficMetricsGranularityEnumValues = []DataTrafficMetricsGranularity{
	"DAY",
}

func (v *DataTrafficMetricsGranularity) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DataTrafficMetricsGranularity(value)
	for _, existing := range AllowedDataTrafficMetricsGranularityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DataTrafficMetricsGranularity", value)
}

// NewDataTrafficMetricsGranularityFromValue returns a pointer to a valid DataTrafficMetricsGranularity
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDataTrafficMetricsGranularityFromValue(v string) (*DataTrafficMetricsGranularity, error) {
	ev := DataTrafficMetricsGranularity(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DataTrafficMetricsGranularity: valid values are %v", v, AllowedDataTrafficMetricsGranularityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DataTrafficMetricsGranularity) IsValid() bool {
	for _, existing := range AllowedDataTrafficMetricsGranularityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to dataTrafficMetricsGranularity value
func (v DataTrafficMetricsGranularity) Ptr() *DataTrafficMetricsGranularity {
	return &v
}

type NullableDataTrafficMetricsGranularity struct {
	value *DataTrafficMetricsGranularity
	isSet bool
}

func (v NullableDataTrafficMetricsGranularity) Get() *DataTrafficMetricsGranularity {
	return v.value
}

func (v *NullableDataTrafficMetricsGranularity) Set(val *DataTrafficMetricsGranularity) {
	v.value = val
	v.isSet = true
}

func (v NullableDataTrafficMetricsGranularity) IsSet() bool {
	return v.isSet
}

func (v *NullableDataTrafficMetricsGranularity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataTrafficMetricsGranularity(val *DataTrafficMetricsGranularity) *NullableDataTrafficMetricsGranularity {
	return &NullableDataTrafficMetricsGranularity{value: val, isSet: true}
}

func (v NullableDataTrafficMetricsGranularity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataTrafficMetricsGranularity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

