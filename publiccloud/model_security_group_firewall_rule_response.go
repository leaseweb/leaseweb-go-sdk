/*
Public Clouds

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publiccloud

import (
	"encoding/json"
	"fmt"
)

// checks if the SecurityGroupFirewallRuleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupFirewallRuleResponse{}

// SecurityGroupFirewallRuleResponse struct for SecurityGroupFirewallRuleResponse
type SecurityGroupFirewallRuleResponse struct {
	// The protocol of the firewall rule
	Protocol string `json:"protocol"`
	// Start port for TCP/UDP rules, null for ICMP rules
	StartPort NullableInt32 `json:"startPort"`
	// End port for TCP/UDP rules, null for ICMP rules
	EndPort NullableInt32 `json:"endPort"`
	// ICMP type for ICMP protocol, null for TCP/UDP rules
	IcmpType NullableInt32 `json:"icmpType"`
	// ICMP code for ICMP protocol, null for TCP/UDP rules
	IcmpCode NullableInt32 `json:"icmpCode"`
	// Source IP address or CIDR block
	Source string `json:"source"`
	State FirewallRuleState `json:"state"`
	AdditionalProperties map[string]interface{}
}

type _SecurityGroupFirewallRuleResponse SecurityGroupFirewallRuleResponse

// NewSecurityGroupFirewallRuleResponse instantiates a new SecurityGroupFirewallRuleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupFirewallRuleResponse(protocol string, startPort NullableInt32, endPort NullableInt32, icmpType NullableInt32, icmpCode NullableInt32, source string, state FirewallRuleState) *SecurityGroupFirewallRuleResponse {
	this := SecurityGroupFirewallRuleResponse{}
	this.Protocol = protocol
	this.StartPort = startPort
	this.EndPort = endPort
	this.IcmpType = icmpType
	this.IcmpCode = icmpCode
	this.Source = source
	this.State = state
	return &this
}

// NewSecurityGroupFirewallRuleResponseWithDefaults instantiates a new SecurityGroupFirewallRuleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupFirewallRuleResponseWithDefaults() *SecurityGroupFirewallRuleResponse {
	this := SecurityGroupFirewallRuleResponse{}
	return &this
}

// GetProtocol returns the Protocol field value
func (o *SecurityGroupFirewallRuleResponse) GetProtocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupFirewallRuleResponse) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *SecurityGroupFirewallRuleResponse) SetProtocol(v string) {
	o.Protocol = v
}

// GetStartPort returns the StartPort field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *SecurityGroupFirewallRuleResponse) GetStartPort() int32 {
	if o == nil || o.StartPort.Get() == nil {
		var ret int32
		return ret
	}

	return *o.StartPort.Get()
}

// GetStartPortOk returns a tuple with the StartPort field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupFirewallRuleResponse) GetStartPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartPort.Get(), o.StartPort.IsSet()
}

// SetStartPort sets field value
func (o *SecurityGroupFirewallRuleResponse) SetStartPort(v int32) {
	o.StartPort.Set(&v)
}

// GetEndPort returns the EndPort field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *SecurityGroupFirewallRuleResponse) GetEndPort() int32 {
	if o == nil || o.EndPort.Get() == nil {
		var ret int32
		return ret
	}

	return *o.EndPort.Get()
}

// GetEndPortOk returns a tuple with the EndPort field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupFirewallRuleResponse) GetEndPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndPort.Get(), o.EndPort.IsSet()
}

// SetEndPort sets field value
func (o *SecurityGroupFirewallRuleResponse) SetEndPort(v int32) {
	o.EndPort.Set(&v)
}

// GetIcmpType returns the IcmpType field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *SecurityGroupFirewallRuleResponse) GetIcmpType() int32 {
	if o == nil || o.IcmpType.Get() == nil {
		var ret int32
		return ret
	}

	return *o.IcmpType.Get()
}

// GetIcmpTypeOk returns a tuple with the IcmpType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupFirewallRuleResponse) GetIcmpTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IcmpType.Get(), o.IcmpType.IsSet()
}

// SetIcmpType sets field value
func (o *SecurityGroupFirewallRuleResponse) SetIcmpType(v int32) {
	o.IcmpType.Set(&v)
}

// GetIcmpCode returns the IcmpCode field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *SecurityGroupFirewallRuleResponse) GetIcmpCode() int32 {
	if o == nil || o.IcmpCode.Get() == nil {
		var ret int32
		return ret
	}

	return *o.IcmpCode.Get()
}

// GetIcmpCodeOk returns a tuple with the IcmpCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupFirewallRuleResponse) GetIcmpCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IcmpCode.Get(), o.IcmpCode.IsSet()
}

// SetIcmpCode sets field value
func (o *SecurityGroupFirewallRuleResponse) SetIcmpCode(v int32) {
	o.IcmpCode.Set(&v)
}

// GetSource returns the Source field value
func (o *SecurityGroupFirewallRuleResponse) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupFirewallRuleResponse) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *SecurityGroupFirewallRuleResponse) SetSource(v string) {
	o.Source = v
}

// GetState returns the State field value
func (o *SecurityGroupFirewallRuleResponse) GetState() FirewallRuleState {
	if o == nil {
		var ret FirewallRuleState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupFirewallRuleResponse) GetStateOk() (*FirewallRuleState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *SecurityGroupFirewallRuleResponse) SetState(v FirewallRuleState) {
	o.State = v
}

func (o SecurityGroupFirewallRuleResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupFirewallRuleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["protocol"] = o.Protocol
	toSerialize["startPort"] = o.StartPort.Get()
	toSerialize["endPort"] = o.EndPort.Get()
	toSerialize["icmpType"] = o.IcmpType.Get()
	toSerialize["icmpCode"] = o.IcmpCode.Get()
	toSerialize["source"] = o.Source
	toSerialize["state"] = o.State

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SecurityGroupFirewallRuleResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"protocol",
		"startPort",
		"endPort",
		"icmpType",
		"icmpCode",
		"source",
		"state",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecurityGroupFirewallRuleResponse := _SecurityGroupFirewallRuleResponse{}

	err = json.Unmarshal(data, &varSecurityGroupFirewallRuleResponse)

	if err != nil {
		return err
	}

	*o = SecurityGroupFirewallRuleResponse(varSecurityGroupFirewallRuleResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "protocol")
		delete(additionalProperties, "startPort")
		delete(additionalProperties, "endPort")
		delete(additionalProperties, "icmpType")
		delete(additionalProperties, "icmpCode")
		delete(additionalProperties, "source")
		delete(additionalProperties, "state")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSecurityGroupFirewallRuleResponse struct {
	value *SecurityGroupFirewallRuleResponse
	isSet bool
}

func (v NullableSecurityGroupFirewallRuleResponse) Get() *SecurityGroupFirewallRuleResponse {
	return v.value
}

func (v *NullableSecurityGroupFirewallRuleResponse) Set(val *SecurityGroupFirewallRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupFirewallRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupFirewallRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupFirewallRuleResponse(val *SecurityGroupFirewallRuleResponse) *NullableSecurityGroupFirewallRuleResponse {
	return &NullableSecurityGroupFirewallRuleResponse{value: val, isSet: true}
}

func (v NullableSecurityGroupFirewallRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupFirewallRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


