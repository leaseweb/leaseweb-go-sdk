/*
Public Clouds

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.  <div class=\"badge\">BETA</div> This API is in BETA. Documentation might be incorrect or incomplete. Functionality might change with the final release.>

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publiccloud

import (
	"encoding/json"
)

// checks if the UpdateNotificationSettingOptsChannelsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNotificationSettingOptsChannelsInner{}

// UpdateNotificationSettingOptsChannelsInner struct for UpdateNotificationSettingOptsChannelsInner
type UpdateNotificationSettingOptsChannelsInner struct {
	Type *string `json:"type,omitempty"`
	ContactGroup *string `json:"contactGroup,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateNotificationSettingOptsChannelsInner UpdateNotificationSettingOptsChannelsInner

// NewUpdateNotificationSettingOptsChannelsInner instantiates a new UpdateNotificationSettingOptsChannelsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNotificationSettingOptsChannelsInner() *UpdateNotificationSettingOptsChannelsInner {
	this := UpdateNotificationSettingOptsChannelsInner{}
	return &this
}

// NewUpdateNotificationSettingOptsChannelsInnerWithDefaults instantiates a new UpdateNotificationSettingOptsChannelsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNotificationSettingOptsChannelsInnerWithDefaults() *UpdateNotificationSettingOptsChannelsInner {
	this := UpdateNotificationSettingOptsChannelsInner{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpdateNotificationSettingOptsChannelsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNotificationSettingOptsChannelsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UpdateNotificationSettingOptsChannelsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UpdateNotificationSettingOptsChannelsInner) SetType(v string) {
	o.Type = &v
}

// GetContactGroup returns the ContactGroup field value if set, zero value otherwise.
func (o *UpdateNotificationSettingOptsChannelsInner) GetContactGroup() string {
	if o == nil || IsNil(o.ContactGroup) {
		var ret string
		return ret
	}
	return *o.ContactGroup
}

// GetContactGroupOk returns a tuple with the ContactGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNotificationSettingOptsChannelsInner) GetContactGroupOk() (*string, bool) {
	if o == nil || IsNil(o.ContactGroup) {
		return nil, false
	}
	return o.ContactGroup, true
}

// HasContactGroup returns a boolean if a field has been set.
func (o *UpdateNotificationSettingOptsChannelsInner) HasContactGroup() bool {
	if o != nil && !IsNil(o.ContactGroup) {
		return true
	}

	return false
}

// SetContactGroup gets a reference to the given string and assigns it to the ContactGroup field.
func (o *UpdateNotificationSettingOptsChannelsInner) SetContactGroup(v string) {
	o.ContactGroup = &v
}

func (o UpdateNotificationSettingOptsChannelsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNotificationSettingOptsChannelsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ContactGroup) {
		toSerialize["contactGroup"] = o.ContactGroup
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateNotificationSettingOptsChannelsInner) UnmarshalJSON(data []byte) (err error) {
	varUpdateNotificationSettingOptsChannelsInner := _UpdateNotificationSettingOptsChannelsInner{}

	err = json.Unmarshal(data, &varUpdateNotificationSettingOptsChannelsInner)

	if err != nil {
		return err
	}

	*o = UpdateNotificationSettingOptsChannelsInner(varUpdateNotificationSettingOptsChannelsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "contactGroup")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateNotificationSettingOptsChannelsInner struct {
	value *UpdateNotificationSettingOptsChannelsInner
	isSet bool
}

func (v NullableUpdateNotificationSettingOptsChannelsInner) Get() *UpdateNotificationSettingOptsChannelsInner {
	return v.value
}

func (v *NullableUpdateNotificationSettingOptsChannelsInner) Set(val *UpdateNotificationSettingOptsChannelsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNotificationSettingOptsChannelsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNotificationSettingOptsChannelsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNotificationSettingOptsChannelsInner(val *UpdateNotificationSettingOptsChannelsInner) *NullableUpdateNotificationSettingOptsChannelsInner {
	return &NullableUpdateNotificationSettingOptsChannelsInner{value: val, isSet: true}
}

func (v NullableUpdateNotificationSettingOptsChannelsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNotificationSettingOptsChannelsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


