/*
Public Clouds

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publiccloud

import (
	"encoding/json"
)

// checks if the DataTransferredMetricsPerSec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataTransferredMetricsPerSec{}

// DataTransferredMetricsPerSec struct for DataTransferredMetricsPerSec
type DataTransferredMetricsPerSec struct {
	DataIn *MetricsPropertiesRequests `json:"dataIn,omitempty"`
	DataOut *MetricsPropertiesRequests `json:"dataOut,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DataTransferredMetricsPerSec DataTransferredMetricsPerSec

// NewDataTransferredMetricsPerSec instantiates a new DataTransferredMetricsPerSec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataTransferredMetricsPerSec() *DataTransferredMetricsPerSec {
	this := DataTransferredMetricsPerSec{}
	return &this
}

// NewDataTransferredMetricsPerSecWithDefaults instantiates a new DataTransferredMetricsPerSec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataTransferredMetricsPerSecWithDefaults() *DataTransferredMetricsPerSec {
	this := DataTransferredMetricsPerSec{}
	return &this
}

// GetDataIn returns the DataIn field value if set, zero value otherwise.
func (o *DataTransferredMetricsPerSec) GetDataIn() MetricsPropertiesRequests {
	if o == nil || IsNil(o.DataIn) {
		var ret MetricsPropertiesRequests
		return ret
	}
	return *o.DataIn
}

// GetDataInOk returns a tuple with the DataIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataTransferredMetricsPerSec) GetDataInOk() (*MetricsPropertiesRequests, bool) {
	if o == nil || IsNil(o.DataIn) {
		return nil, false
	}
	return o.DataIn, true
}

// HasDataIn returns a boolean if a field has been set.
func (o *DataTransferredMetricsPerSec) HasDataIn() bool {
	if o != nil && !IsNil(o.DataIn) {
		return true
	}

	return false
}

// SetDataIn gets a reference to the given MetricsPropertiesRequests and assigns it to the DataIn field.
func (o *DataTransferredMetricsPerSec) SetDataIn(v MetricsPropertiesRequests) {
	o.DataIn = &v
}

// GetDataOut returns the DataOut field value if set, zero value otherwise.
func (o *DataTransferredMetricsPerSec) GetDataOut() MetricsPropertiesRequests {
	if o == nil || IsNil(o.DataOut) {
		var ret MetricsPropertiesRequests
		return ret
	}
	return *o.DataOut
}

// GetDataOutOk returns a tuple with the DataOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataTransferredMetricsPerSec) GetDataOutOk() (*MetricsPropertiesRequests, bool) {
	if o == nil || IsNil(o.DataOut) {
		return nil, false
	}
	return o.DataOut, true
}

// HasDataOut returns a boolean if a field has been set.
func (o *DataTransferredMetricsPerSec) HasDataOut() bool {
	if o != nil && !IsNil(o.DataOut) {
		return true
	}

	return false
}

// SetDataOut gets a reference to the given MetricsPropertiesRequests and assigns it to the DataOut field.
func (o *DataTransferredMetricsPerSec) SetDataOut(v MetricsPropertiesRequests) {
	o.DataOut = &v
}

func (o DataTransferredMetricsPerSec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataTransferredMetricsPerSec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataIn) {
		toSerialize["dataIn"] = o.DataIn
	}
	if !IsNil(o.DataOut) {
		toSerialize["dataOut"] = o.DataOut
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DataTransferredMetricsPerSec) UnmarshalJSON(data []byte) (err error) {
	varDataTransferredMetricsPerSec := _DataTransferredMetricsPerSec{}

	err = json.Unmarshal(data, &varDataTransferredMetricsPerSec)

	if err != nil {
		return err
	}

	*o = DataTransferredMetricsPerSec(varDataTransferredMetricsPerSec)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "dataIn")
		delete(additionalProperties, "dataOut")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDataTransferredMetricsPerSec struct {
	value *DataTransferredMetricsPerSec
	isSet bool
}

func (v NullableDataTransferredMetricsPerSec) Get() *DataTransferredMetricsPerSec {
	return v.value
}

func (v *NullableDataTransferredMetricsPerSec) Set(val *DataTransferredMetricsPerSec) {
	v.value = val
	v.isSet = true
}

func (v NullableDataTransferredMetricsPerSec) IsSet() bool {
	return v.isSet
}

func (v *NullableDataTransferredMetricsPerSec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataTransferredMetricsPerSec(val *DataTransferredMetricsPerSec) *NullableDataTransferredMetricsPerSec {
	return &NullableDataTransferredMetricsPerSec{value: val, isSet: true}
}

func (v NullableDataTransferredMetricsPerSec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataTransferredMetricsPerSec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


