/*
Public Clouds

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publiccloud

import (
	"encoding/json"
)

// checks if the MetricsPropertiesPercentage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricsPropertiesPercentage{}

// MetricsPropertiesPercentage struct for MetricsPropertiesPercentage
type MetricsPropertiesPercentage struct {
	Values []MetricsValues `json:"values,omitempty"`
	// Unit representing percentage
	Unit *string `json:"unit,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MetricsPropertiesPercentage MetricsPropertiesPercentage

// NewMetricsPropertiesPercentage instantiates a new MetricsPropertiesPercentage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricsPropertiesPercentage() *MetricsPropertiesPercentage {
	this := MetricsPropertiesPercentage{}
	return &this
}

// NewMetricsPropertiesPercentageWithDefaults instantiates a new MetricsPropertiesPercentage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricsPropertiesPercentageWithDefaults() *MetricsPropertiesPercentage {
	this := MetricsPropertiesPercentage{}
	return &this
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *MetricsPropertiesPercentage) GetValues() []MetricsValues {
	if o == nil || IsNil(o.Values) {
		var ret []MetricsValues
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsPropertiesPercentage) GetValuesOk() ([]MetricsValues, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *MetricsPropertiesPercentage) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []MetricsValues and assigns it to the Values field.
func (o *MetricsPropertiesPercentage) SetValues(v []MetricsValues) {
	o.Values = v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *MetricsPropertiesPercentage) GetUnit() string {
	if o == nil || IsNil(o.Unit) {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsPropertiesPercentage) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *MetricsPropertiesPercentage) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *MetricsPropertiesPercentage) SetUnit(v string) {
	o.Unit = &v
}

func (o MetricsPropertiesPercentage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricsPropertiesPercentage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MetricsPropertiesPercentage) UnmarshalJSON(data []byte) (err error) {
	varMetricsPropertiesPercentage := _MetricsPropertiesPercentage{}

	err = json.Unmarshal(data, &varMetricsPropertiesPercentage)

	if err != nil {
		return err
	}

	*o = MetricsPropertiesPercentage(varMetricsPropertiesPercentage)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "values")
		delete(additionalProperties, "unit")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetricsPropertiesPercentage struct {
	value *MetricsPropertiesPercentage
	isSet bool
}

func (v NullableMetricsPropertiesPercentage) Get() *MetricsPropertiesPercentage {
	return v.value
}

func (v *NullableMetricsPropertiesPercentage) Set(val *MetricsPropertiesPercentage) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricsPropertiesPercentage) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricsPropertiesPercentage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricsPropertiesPercentage(val *MetricsPropertiesPercentage) *NullableMetricsPropertiesPercentage {
	return &NullableMetricsPropertiesPercentage{value: val, isSet: true}
}

func (v NullableMetricsPropertiesPercentage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricsPropertiesPercentage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


