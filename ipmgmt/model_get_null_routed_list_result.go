/*
IP management

> The base URL for this API is: **https://api.leaseweb.com/ipMgmt/v2/_**

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipmgmt

import (
	"encoding/json"
	"fmt"
)

// checks if the GetNullRoutedListResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNullRoutedListResult{}

// GetNullRoutedListResult Object containing a list of null routed IPv6
type GetNullRoutedListResult struct {
	NullRoutes []NullRoutedIPv6 `json:"nullRoutes"`
	Metadata Metadata `json:"_metadata"`
	AdditionalProperties map[string]interface{}
}

type _GetNullRoutedListResult GetNullRoutedListResult

// NewGetNullRoutedListResult instantiates a new GetNullRoutedListResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNullRoutedListResult(nullRoutes []NullRoutedIPv6, metadata Metadata) *GetNullRoutedListResult {
	this := GetNullRoutedListResult{}
	this.NullRoutes = nullRoutes
	this.Metadata = metadata
	return &this
}

// NewGetNullRoutedListResultWithDefaults instantiates a new GetNullRoutedListResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNullRoutedListResultWithDefaults() *GetNullRoutedListResult {
	this := GetNullRoutedListResult{}
	return &this
}

// GetNullRoutes returns the NullRoutes field value
func (o *GetNullRoutedListResult) GetNullRoutes() []NullRoutedIPv6 {
	if o == nil {
		var ret []NullRoutedIPv6
		return ret
	}

	return o.NullRoutes
}

// GetNullRoutesOk returns a tuple with the NullRoutes field value
// and a boolean to check if the value has been set.
func (o *GetNullRoutedListResult) GetNullRoutesOk() ([]NullRoutedIPv6, bool) {
	if o == nil {
		return nil, false
	}
	return o.NullRoutes, true
}

// SetNullRoutes sets field value
func (o *GetNullRoutedListResult) SetNullRoutes(v []NullRoutedIPv6) {
	o.NullRoutes = v
}

// GetMetadata returns the Metadata field value
func (o *GetNullRoutedListResult) GetMetadata() Metadata {
	if o == nil {
		var ret Metadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *GetNullRoutedListResult) GetMetadataOk() (*Metadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *GetNullRoutedListResult) SetMetadata(v Metadata) {
	o.Metadata = v
}

func (o GetNullRoutedListResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNullRoutedListResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nullRoutes"] = o.NullRoutes
	toSerialize["_metadata"] = o.Metadata

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetNullRoutedListResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"nullRoutes",
		"_metadata",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetNullRoutedListResult := _GetNullRoutedListResult{}

	err = json.Unmarshal(data, &varGetNullRoutedListResult)

	if err != nil {
		return err
	}

	*o = GetNullRoutedListResult(varGetNullRoutedListResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "nullRoutes")
		delete(additionalProperties, "_metadata")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetNullRoutedListResult struct {
	value *GetNullRoutedListResult
	isSet bool
}

func (v NullableGetNullRoutedListResult) Get() *GetNullRoutedListResult {
	return v.value
}

func (v *NullableGetNullRoutedListResult) Set(val *GetNullRoutedListResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNullRoutedListResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNullRoutedListResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNullRoutedListResult(val *GetNullRoutedListResult) *NullableGetNullRoutedListResult {
	return &NullableGetNullRoutedListResult{value: val, isSet: true}
}

func (v NullableGetNullRoutedListResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNullRoutedListResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


